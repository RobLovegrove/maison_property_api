name: Build

on: [push]

permissions:
  contents: read
  packages: write

jobs:
  python-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.11
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        run: flake8 tests/ app/

  unit-testing:
    runs-on: ubuntu-latest
    needs: python-formatting
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-flask
          pip install -e .
      - name: Verify PostgreSQL connection
        run: |
          sudo apt-get install -y postgresql-client
          pg_isready -h localhost -p 5432
          PGPASSWORD=postgres psql -h localhost -U postgres -d test_db -c '\dt'
      - name: Run tests
        env:
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          PYTHONPATH: ${{ github.workspace }}
          FLASK_ENV: testing
          AZURE_STORAGE_CONNECTION_STRING: mock_connection_string
        run: |
          pytest -v -p no:warnings
  build-and-push:
    runs-on: ubuntu-latest
    needs: unit-testing
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/roblovegrove/maison_property_api:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}